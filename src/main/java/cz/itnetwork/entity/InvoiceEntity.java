package cz.itnetwork.entity;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

import java.time.LocalDate;


/**
 * Represents an invoice within the system. This class is mapped to the {@code invoice} table
 * in the database and contains various details related to the invoice.
 *
 * <p>The {@code InvoiceEntity} class includes fields such as:</p>
 * <ul>
 *     <li>{@code id} - Unique identifier for the invoice.</li>
 *     <li>{@code invoiceNumber} - The number assigned to the invoice.</li>
 *     <li>{@code issued} - The date when the invoice was issued.</li>
 *     <li>{@code dueDate} - The date by which the invoice payment is due.</li>
 *     <li>{@code product} - Description of the product or service invoiced.</li>
 *     <li>{@code price} - The price of the product or service invoiced.</li>
 *     <li>{@code vat} - The VAT rate applied to the invoice.</li>
 *     <li>{@code note} - Additional notes or comments related to the invoice.</li>
 *     <li>{@code buyer} - The person who is buying the product or service.</li>
 *     <li>{@code seller} - The person who is selling the product or service.</li>
 * </ul>
 *
 * <p>The class uses Lombok annotations to automatically generate getters and setters for all fields.</p>
 *
 * @version 1.0
 * @since 2024
 */
@Entity(name = "invoice")
@Getter
@Setter
public class InvoiceEntity {

    /**
     * Unique identifier for the invoice.
     *
     * <p>This field is used to uniquely identify the invoice and is automatically generated by the database.</p>
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The number assigned to the invoice for identification purposes.
     *
     * <p>This field must not be {@code NULL} in the database.</p>
     */
    @Column(nullable = false)
    private int invoiceNumber;

    /**
     * The date when the invoice was issued.
     *
     * <p>This field must not be {@code NULL} in the database.</p>
     */
    @Column(nullable = false)
    private LocalDate issued;

    /**
     * The date by which the invoice payment is due.
     *
     * <p>This field must not be {@code NULL} in the database.</p>
     */
    @Column(nullable = false)
    private LocalDate dueDate;

    /**
     * Description of the product or service invoiced.
     *
     * <p>This field must not be {@code NULL} in the database.</p>
     */
    @Column(nullable = false)
    private String product;

    /**
     * The price of the product or service invoiced.
     *
     * <p>This field must not be {@code NULL} in the database.</p>
     */
    @Column(nullable = false)
    private Long price;

    /**
     * The VAT rate applied to the invoice as a percentage.
     *
     * <p>This field must not be {@code NULL} in the database.</p>
     */
    @Column(nullable = false)
    private int vat;

    /**
     * Additional notes or comments related to the invoice.
     *
     * <p>This field is optional and can be {@code NULL} in the database.</p>
     */
    private String note;

    /**
     * The person who is buying the product or service.
     *
     * <p>This field represents a many-to-one relationship with the {@link PersonEntity} class.</p>
     */
    @ManyToOne
    private PersonEntity buyer;

    /**
     * The person who is selling the product or service.
     *
     * <p>This field represents a many-to-one relationship with the {@link PersonEntity} class.</p>
     */
    @ManyToOne
    private PersonEntity seller;

}
